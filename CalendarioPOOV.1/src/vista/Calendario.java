/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
package vista;

import modelos.Fecha;
import modelos.Mes;
import modelos.Reserva;
import controladores.ControladorCalendario;
import controladores.ControladorHotel;
import controladores.MetodosGenerales;
import java.util.Calendar;
import java.util.Date;
import java.util.Map;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import modelos.*;

/**
 *
 * @author Pc
 */
public class Calendario extends javax.swing.JFrame {

    /**
     * Creates new form DashBoard
     */
    public Calendario() {
        initComponents();
        iniciarCalendario();
        iniciarComboBoxs();
        setTitle("Administracion de Hotel - " + MetodosGenerales.hotelGlobal.getNombreHotel());

    }

    private void iniciarCalendario() {
        //al iniciar calendario estará en la fecha de hoy
        Date date = new Date();
        int dia = date.getDate();
        int mes = date.getMonth() + 1;
        int anio = date.getYear() + 1900;
        tablaCalendario = new ControladorCalendario();
        //Fechas en español
        Fecha.traductoActivado = true;
        //Llenado de columna de la tabla calendario
        iniciarTablaCalendario(tabListaHabitaciones, tabCalendarioReservas, 1, dia, mes, anio,
                listaHabitacionesTablaSelected, radBtnOrdenarHabTipo.isSelected());
        tabCalendarioReservas.setColumnSelectionAllowed(false);
        tabListaHabitaciones.setColumnSelectionAllowed(true);
        tabListaHabitaciones.setCellSelectionEnabled(true);

    }

    private void iniciarComboBoxs() {
        Fecha fecha = fechaSelected;
        Mes[] mesesComboBox = tablaCalendario.ListaDeMeses(fecha);
        cbxMesActual.setModel(new javax.swing.DefaultComboBoxModel(mesesComboBox));
        cbxMesActual.setSelectedIndex(6);
        cbxFiltroAvance.setSelectedIndex(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        cbxMesActual = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        btnUnaSemana = new javax.swing.JButton();
        btnDosSemanas = new javax.swing.JButton();
        BtnTresSemanas = new javax.swing.JButton();
        btnUnMes = new javax.swing.JButton();
        btnAnterior = new javax.swing.JButton();
        btnHoy = new javax.swing.JButton();
        btnSiguiente = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabCalendarioReservas = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabListaHabitaciones = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        }
        ;
        radBtnOrdenarHabTipo = new javax.swing.JRadioButton();
        proBarAvanceDeMesTab = new javax.swing.JProgressBar();
        labFechaPrimeraTabla = new javax.swing.JLabel();
        labFechaUltimaTabla = new javax.swing.JLabel();
        cbxFiltroAvance = new javax.swing.JComboBox();
        tabsFacturacion = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabReservas = new javax.swing.JTable();
        btnAgregarHabitaciones = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnProximo = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        cbxPersona = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        cbxEmpresa = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        btnAnadirEmpresa = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cbxReservasPreliminar = new javax.swing.JComboBox();
        cbxAgencia = new javax.swing.JComboBox();
        chkEmpresa = new javax.swing.JCheckBox();
        chkAgencia = new javax.swing.JCheckBox();
        chkPersona = new javax.swing.JCheckBox();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jDesktopPane1.setBackground(new java.awt.Color(153, 204, 255));

        cbxMesActual.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxMesActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMesActualActionPerformed(evt);
            }
        });
        cbxMesActual.setBounds(10, 10, 130, 20);
        jDesktopPane1.add(cbxMesActual, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel1.setText("Ver:");
        jLabel1.setBounds(150, 10, 20, 20);
        jDesktopPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnUnaSemana.setText("Una semana");
        btnUnaSemana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnaSemanaActionPerformed(evt);
            }
        });
        btnUnaSemana.setBounds(170, 10, 91, 23);
        jDesktopPane1.add(btnUnaSemana, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnDosSemanas.setText("Dos semanas");
        btnDosSemanas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDosSemanasActionPerformed(evt);
            }
        });
        btnDosSemanas.setBounds(260, 10, 95, 23);
        jDesktopPane1.add(btnDosSemanas, javax.swing.JLayeredPane.DEFAULT_LAYER);

        BtnTresSemanas.setText("Tres semanas");
        BtnTresSemanas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTresSemanasActionPerformed(evt);
            }
        });
        BtnTresSemanas.setBounds(360, 10, 100, 23);
        jDesktopPane1.add(BtnTresSemanas, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnUnMes.setText("Un mes");
        btnUnMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnMesActionPerformed(evt);
            }
        });
        btnUnMes.setBounds(460, 10, 80, 23);
        jDesktopPane1.add(btnUnMes, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnAnterior.setText("Anterior");
        btnAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnteriorActionPerformed(evt);
            }
        });
        btnAnterior.setBounds(820, 10, 71, 23);
        jDesktopPane1.add(btnAnterior, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnHoy.setText("Hoy");
        btnHoy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHoyActionPerformed(evt);
            }
        });
        btnHoy.setBounds(890, 10, 51, 23);
        jDesktopPane1.add(btnHoy, javax.swing.JLayeredPane.DEFAULT_LAYER);

        btnSiguiente.setText("Siguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });
        btnSiguiente.setBounds(940, 10, 80, 23);
        jDesktopPane1.add(btnSiguiente, javax.swing.JLayeredPane.DEFAULT_LAYER);

        tabCalendarioReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabCalendarioReservas.setRowSelectionAllowed(false);
        jScrollPane2.setViewportView(tabCalendarioReservas);

        jScrollPane2.setBounds(70, 110, 950, 510);
        jDesktopPane1.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        tabListaHabitaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Numero de Hab."
            }
        ));
        tabListaHabitaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabListaHabitacionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabListaHabitaciones);

        jScrollPane1.setBounds(10, 110, 60, 510);
        jDesktopPane1.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        radBtnOrdenarHabTipo.setText("Ordenar habitacion por Tipo");
        radBtnOrdenarHabTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radBtnOrdenarHabTipoActionPerformed(evt);
            }
        });
        radBtnOrdenarHabTipo.setBounds(20, 50, 170, 23);
        jDesktopPane1.add(radBtnOrdenarHabTipo, javax.swing.JLayeredPane.DEFAULT_LAYER);
        proBarAvanceDeMesTab.setBounds(70, 99, 950, 10);
        jDesktopPane1.add(proBarAvanceDeMesTab, javax.swing.JLayeredPane.DEFAULT_LAYER);

        labFechaPrimeraTabla.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labFechaPrimeraTabla.setText(mesStringActual);
        labFechaPrimeraTabla.setBounds(70, 80, 110, 14);
        jDesktopPane1.add(labFechaPrimeraTabla, javax.swing.JLayeredPane.DEFAULT_LAYER);

        labFechaUltimaTabla.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labFechaUltimaTabla.setText(mesStringFinal);
        labFechaUltimaTabla.setBounds(924, 80, 90, 14);
        jDesktopPane1.add(labFechaUltimaTabla, javax.swing.JLayeredPane.DEFAULT_LAYER);

        cbxFiltroAvance.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mes", "Dia" }));
        cbxFiltroAvance.setBounds(820, 40, 80, 20);
        jDesktopPane1.add(cbxFiltroAvance, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane1.addTab("DASHBOARD", jDesktopPane1);

        tabReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Habitacion", "Fecha llegada", "Fecha salida", "Dias", "Total Moneda", "Editar"
            }
        ));
        jScrollPane3.setViewportView(tabReservas);

        btnAgregarHabitaciones.setText("+ Agregar Habitaciones");
        btnAgregarHabitaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarHabitacionesActionPerformed(evt);
            }
        });

        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnProximo.setText("Proximo Paso >");
        btnProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProximoActionPerformed(evt);
            }
        });

        jLabel2.setText("Defiinir pago");

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAgregarHabitaciones)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEditar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminar))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 909, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(761, 761, 761)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProximo)))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarHabitaciones)
                    .addComponent(jButton1)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar))
                .addGap(111, 111, 111)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProximo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(121, Short.MAX_VALUE))
        );

        tabsFacturacion.addTab("HABITACIONES", jPanel1);

        cbxPersona.setModel(new javax.swing.DefaultComboBoxModel(ControladorHotel.listaPersona()));
        cbxPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxPersonaActionPerformed(evt);
            }
        });

        jLabel3.setText("Asignacion de Habitaciones Reservadas hacia el pagador");

        jButton2.setText("Agregar Persona +");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        cbxEmpresa.setModel(new javax.swing.DefaultComboBoxModel(ControladorHotel.listaEmpresa()));

        jButton3.setText("Agregar Agencia +");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnAnadirEmpresa.setText("Agregar Empresa");
        btnAnadirEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnadirEmpresaActionPerformed(evt);
            }
        });

        jLabel6.setText("Reservas pendientes de asignacion de pagador");

        cbxReservasPreliminar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "No hay reservas" }));

        cbxAgencia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxAgencia.setModel(new javax.swing.DefaultComboBoxModel(ControladorHotel.listaAgencia()));

        chkEmpresa.setText("Es empresa");
        chkEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEmpresaActionPerformed(evt);
            }
        });

        chkAgencia.setText("Es agencia");
        chkAgencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAgenciaActionPerformed(evt);
            }
        });

        chkPersona.setText("Es persona");
        chkPersona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPersonaActionPerformed(evt);
            }
        });

        jButton4.setText("Actualizar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addComponent(chkPersona)
                    .addComponent(chkAgencia)
                    .addComponent(chkEmpresa)
                    .addComponent(btnAnadirEmpresa)
                    .addComponent(cbxPersona, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(cbxAgencia, javax.swing.GroupLayout.Alignment.LEADING, 0, 306, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxEmpresa, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(83, 83, 83)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbxReservasPreliminar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(343, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6))
                .addGap(13, 13, 13)
                .addComponent(chkEmpresa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxReservasPreliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(chkAgencia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxAgencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chkPersona)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxPersona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAnadirEmpresa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(218, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("tab1", jPanel2);

        tabsFacturacion.addTab("FACTURACION", jTabbedPane3);

        jTabbedPane1.addTab("RESERVAS", tabsFacturacion);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUnaSemanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnaSemanaActionPerformed

        iniciarTablaCalendario(tabListaHabitaciones, tabCalendarioReservas, 1, fechaSelected.getDiaNumero(),
                fechaSelected.getMesNumero(), fechaSelected.getAnio(), listaHabitacionesTablaSelected, radBtnOrdenarHabTipo.isSelected());
        vistaSemanasSelected = 1;

    }//GEN-LAST:event_btnUnaSemanaActionPerformed

    private void cbxMesActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMesActualActionPerformed
        mesActualFlag = this.cbxMesActual.getSelectedIndex();
        if (mesActualFlag != mesAnteriorFlag) {
            Mes selectedItem = (Mes) this.cbxMesActual.getSelectedItem();
            int mes1 = selectedItem.getFecha().getMesNumero();
            int anio1 = selectedItem.getFecha().getAnio();
            fechaSelected = new Fecha(fechaSelected.getDiaNumero(), mes1, anio1);
            iniciarTablaCalendario(tabListaHabitaciones, tabCalendarioReservas, vistaSemanasSelected, fechaSelected.getDiaNumero(),
                    fechaSelected.getMesNumero(), fechaSelected.getAnio(), listaHabitacionesTablaSelected,
                    radBtnOrdenarHabTipo.isSelected());
        }
        mesAnteriorFlag = mesActualFlag;
    }//GEN-LAST:event_cbxMesActualActionPerformed

    private void btnDosSemanasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDosSemanasActionPerformed

        iniciarTablaCalendario(tabListaHabitaciones, tabCalendarioReservas, 2, fechaSelected.getDiaNumero(),
                fechaSelected.getMesNumero(), fechaSelected.getAnio(), listaHabitacionesTablaSelected,
                radBtnOrdenarHabTipo.isSelected());
        vistaSemanasSelected = 2;

    }//GEN-LAST:event_btnDosSemanasActionPerformed

    private void BtnTresSemanasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTresSemanasActionPerformed

        iniciarTablaCalendario(tabListaHabitaciones, tabCalendarioReservas, 3, fechaSelected.getDiaNumero(),
                fechaSelected.getMesNumero(), fechaSelected.getAnio(), listaHabitacionesTablaSelected,
                radBtnOrdenarHabTipo.isSelected());
        vistaSemanasSelected = 3;
    }//GEN-LAST:event_BtnTresSemanasActionPerformed

    private void btnUnMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnMesActionPerformed

        iniciarTablaCalendario(tabListaHabitaciones, tabCalendarioReservas, 4, fechaSelected.getDiaNumero(),
                fechaSelected.getMesNumero(), fechaSelected.getAnio(), listaHabitacionesTablaSelected,
                radBtnOrdenarHabTipo.isSelected());
        vistaSemanasSelected = 4;
    }//GEN-LAST:event_btnUnMesActionPerformed

    private void btnAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnteriorActionPerformed
        int avance = Calendar.MONTH;
        if (cbxFiltroAvance.getSelectedIndex() == 1) {
            avance = Calendar.DATE;
        }
        fechaSelected = fechaSelected.add(-1, avance);
        iniciarTablaCalendario(tabListaHabitaciones, tabCalendarioReservas, vistaSemanasSelected, fechaSelected.getDiaNumero(),
                fechaSelected.getMesNumero(), fechaSelected.getAnio(), listaHabitacionesTablaSelected,
                radBtnOrdenarHabTipo.isSelected());
    }//GEN-LAST:event_btnAnteriorActionPerformed

    private void btnHoyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHoyActionPerformed
        iniciarCalendario();
    }//GEN-LAST:event_btnHoyActionPerformed

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        int avance = Calendar.MONTH;
        if (cbxFiltroAvance.getSelectedIndex() == 1) {
            avance = Calendar.DATE;
        }
        fechaSelected = fechaSelected.add(1, avance);
        iniciarTablaCalendario(tabListaHabitaciones, tabCalendarioReservas, vistaSemanasSelected, fechaSelected.getDiaNumero(),
                fechaSelected.getMesNumero(), fechaSelected.getAnio(), listaHabitacionesTablaSelected,
                radBtnOrdenarHabTipo.isSelected());
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void radBtnOrdenarHabTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radBtnOrdenarHabTipoActionPerformed
//        iniciarTablaCalendario(tabListaHabitaciones, tabCalendarioReservas, vistaSemanasSelected, fechaSelected.getDiaNumero(),
//                fechaSelected.getMesNumero(), fechaSelected.getAnio(), listaHabitacionesTablaSelected,
//                radBtnOrdenarHabTipo.isSelected());
        System.out.println("Caracteristica con licencia pagada.");
    }//GEN-LAST:event_radBtnOrdenarHabTipoActionPerformed

    private void tabListaHabitacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabListaHabitacionesMouseClicked
        if (evt.getClickCount() == 2) {
            int columna = tabListaHabitaciones.columnAtPoint(evt.getPoint());
            int fila = tabListaHabitaciones.rowAtPoint(evt.getPoint());
            try {
                if (tabListaHabitaciones.getValueAt(fila, columna) != null) {
                    Reserva valueAt = (Reserva) tabListaHabitaciones.getValueAt(fila, columna);
                    JOptionPane.showMessageDialog(this, valueAt.toDetail(), "Detalle de Reserva", 2);
                } else {
                    JOptionPane.showMessageDialog(this, "No existe reserva en esta fecha", "Detalle de Reserva", 2);
                }

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "No se puede visualizar la reserva", "Aviso de Error", 1);
            }
        }
    }//GEN-LAST:event_tabListaHabitacionesMouseClicked

    private void btnAgregarHabitacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarHabitacionesActionPerformed
        anadir = new anadirHabitacion();
        anadir.setVisible(true);
    }//GEN-LAST:event_btnAgregarHabitacionesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        actualizarTablas();
        iniciarTablaCalendario(tabListaHabitaciones, tabCalendarioReservas, vistaSemanasSelected, fechaSelected.getDiaNumero(),
                fechaSelected.getMesNumero(), fechaSelected.getAnio(), listaHabitacionesTablaSelected,
                radBtnOrdenarHabTipo.isSelected());
        DefaultCellEditor defaultCellEditor = new DefaultCellEditor(new JCheckBox("Editar"));
        tabReservas.getColumnModel().getColumn(5).setCellEditor(defaultCellEditor);
        cbxReservasPreliminar.setModel(new javax.swing.DefaultComboBoxModel(ControladorHotel.listaReservaTabla()));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        if (ControladorHotel.mapaReservas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No existen reservas para editar", "Aviso de Error", 1);
        } else {
            int indice = -1;
            int conteo = 0;
            for (int i = 0; i < ControladorHotel.mapaReservas.size(); i++) {
                if (!(Boolean.parseBoolean(tabReservas.getValueAt(i, 5).toString()))) {
                    indice = i;
                    conteo++;
                }
            }
            if (conteo == 1) {
                if (JOptionPane.showConfirmDialog(this, "¿Desea editar la reservación?") == JOptionPane.OK_OPTION) {

                    Habitacion hab = (Habitacion) tabReservas.getValueAt(indice, 0);
                    Fecha fecha = ControladorHotel.formatoHaciaFecha(tabReservas.getValueAt(indice, 1).toString());
                    int dias = Integer.parseInt(tabReservas.getValueAt(indice, 3).toString());
                    String id = ControladorHotel.generarId(hab, fecha, dias);

                    Map<String, Object> buscarReservaTabla = ControladorHotel.buscarReservaTabla(id);
                    double descuento = Double.parseDouble(buscarReservaTabla.get("descuento").toString());
                    Persona persona = (Persona) buscarReservaTabla.get("persona");
                    editar = new editarHabitacion(hab, fecha.toFechaCompleta(), dias, descuento, persona);
                    editar.setVisible(true);
                }
            } else if(conteo==0){
                JOptionPane.showMessageDialog(this, "Solo debes seleccionar una reserva para editar", "Aviso de Error", 1);
            }else{
                JOptionPane.showMessageDialog(this, "Debes seleccionar una reserva para editar", "Aviso de Error", 1);
            }

        }

    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed

        if (ControladorHotel.mapaReservas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No existen reservas para eliminar", "Aviso de Error", 1);
        } else {
            for (int i = 0; i < ControladorHotel.mapaReservas.size(); i++) {
                if (!(Boolean.parseBoolean(tabReservas.getValueAt(i, 5).toString()))) {
                    JOptionPane.showMessageDialog(this, "No ha seleccionado ninguna reserva", "Aviso de Error", 1);
                } else {
                    if (JOptionPane.showConfirmDialog(this, "¿Desea eliminar la reservación?") == JOptionPane.OK_OPTION) {
                        String id = ControladorHotel.generarId((Habitacion) tabReservas.getValueAt(i, 0),
                                ControladorHotel.formatoHaciaFecha(tabReservas.getValueAt(i, 1).toString()),
                                Integer.parseInt(tabReservas.getValueAt(i, 3).toString()));
                        ControladorHotel.quitarReservaTabla(id);
                        ControladorHotel.eliminarReservaPreliminar(id);
                        actualizarTablas();
                    }
                }
            }
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProximoActionPerformed
        tabsFacturacion.setSelectedIndex(1);
    }//GEN-LAST:event_btnProximoActionPerformed

    private void cbxPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxPersonaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxPersonaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        anadirPersona = new anadirPersona();
        anadirPersona.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnAnadirEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnadirEmpresaActionPerformed
        anadirEmpresa = new anadirEmpresa();
        anadirEmpresa.setVisible(true);
    }//GEN-LAST:event_btnAnadirEmpresaActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        anadirAgencia = new anadirAgencia();
        anadirAgencia.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void chkEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEmpresaActionPerformed
        if(chkEmpresa.isSelected()){
            cbxAgencia.setEnabled(false);
            cbxPersona.setModel(new javax.swing.DefaultComboBoxModel(ControladorHotel.listaPersonaPorEmpresa((Empresa)cbxEmpresa.getSelectedItem())));
        }else{
            cbxAgencia.setEnabled(true);
            cbxPersona.setModel(new javax.swing.DefaultComboBoxModel(ControladorHotel.listaPersona()));
        }
    }//GEN-LAST:event_chkEmpresaActionPerformed

    private void chkAgenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAgenciaActionPerformed
        if(chkAgencia.isSelected()){
            cbxEmpresa.setEnabled(false);
            cbxPersona.setModel(new javax.swing.DefaultComboBoxModel(ControladorHotel.listaPersonaPorAgencia((Agencia)cbxAgencia.getSelectedItem())));
        }else{
            cbxEmpresa.setEnabled(true);
            cbxPersona.setModel(new javax.swing.DefaultComboBoxModel(ControladorHotel.listaPersona()));
        }
    }//GEN-LAST:event_chkAgenciaActionPerformed

    private void chkPersonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPersonaActionPerformed
        if(chkPersona.isSelected()){
            cbxEmpresa.setEnabled(false);
            cbxAgencia.setEnabled(false);
        }else{
            cbxEmpresa.setEnabled(true);
            cbxAgencia.setEnabled(true);
        }
    }//GEN-LAST:event_chkPersonaActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        cbxEmpresa.setModel(new javax.swing.DefaultComboBoxModel(ControladorHotel.listaEmpresa()));
        cbxPersona.setModel(new javax.swing.DefaultComboBoxModel(ControladorHotel.listaPersona()));
        cbxAgencia.setModel(new javax.swing.DefaultComboBoxModel(ControladorHotel.listaAgencia()));
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calendario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calendario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calendario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calendario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Calendario().setVisible(true);
            }
        });
    }

    private void iniciarTablaCalendario(JTable jtableCalendario, JTable jtableHabitaciones, int nroSemanas, int dia,
            int mes, int anio, Object[][] listaHabitacionesTab, boolean ordernadoPorHabitacion) {
        Fecha.traductoActivado = true;
        Fecha[] titulos2 = tablaCalendario.listaDeDiasDeSemana(nroSemanas, dia, mes, anio);
        String mesInicial = "";
        int conteoMesInicial = 0;
        String mesFinal = "";
        mesInicial = titulos2[0].getMes();
        for (Fecha fecha : titulos2) {
            if (mesInicial.equals(fecha.getMes())) {
                conteoMesInicial++;
            } else {
                mesFinal = fecha.getMes();
            }
        }

        mesIntInicial = conteoMesInicial;
        proBarAvanceDeMesTab.setMaximum(titulos2.length);
        labFechaPrimeraTabla.setText(mesInicial);
        labFechaUltimaTabla.setText(mesFinal);
        proBarAvanceDeMesTab.setValue(mesIntInicial);
        if (!ordernadoPorHabitacion) {
            listaHabitacionesTab = tablaCalendario.listaHabitacionesTab();
            //String[] titulos = tablaCalendario.diasDeSemanasString(nroSemanas, dia, mes, anio);

            Object[][] LlenadoDeCalendario = tablaCalendario.LlenadoDeCalendario(nroSemanas, dia, mes, anio);
            jtableHabitaciones.setModel(new javax.swing.table.DefaultTableModel(
                    listaHabitacionesTab,
                    new String[]{
                        "Numero de Hab."
                    }));

            jScrollPane1.setViewportView(jtableHabitaciones);

            jtableCalendario.setModel(new javax.swing.table.DefaultTableModel(
                    LlenadoDeCalendario,
                    titulos2));
        } else {
            listaHabitacionesTab = tablaCalendario.listaHabitacionesTabOrdenado();
            Object[][] LlenadoDeCalendario = tablaCalendario.LlenadoDeCalendarioOrdenado(nroSemanas, dia, mes, anio);
            DefaultTableModel modelo = new javax.swing.table.DefaultTableModel(
                    listaHabitacionesTab,
                    new String[]{
                        "Numero de Hab."
                    }) {

                @Override
                public boolean isCellEditable(int fila, int columna) {
                    return false;
                }
            };

            jtableHabitaciones.setModel(modelo);

            jScrollPane1.setViewportView(jtableHabitaciones);
            DefaultTableModel modelo1 = new javax.swing.table.DefaultTableModel(
                    LlenadoDeCalendario,
                    titulos2) {

                @Override
                public boolean isCellEditable(int fila, int columna) {
                    return false;
                }
            };
            jtableCalendario.setModel(modelo1);
        }
        jScrollPane2.setViewportView(jtableCalendario);
        listaHabitacionesTablaSelected = listaHabitacionesTab;
        fechaSelected = tablaCalendario.fijarFechaActualEnTabla(titulos2);
    }

    private void actualizarTablas() {
        tabReservas.setModel(new javax.swing.table.DefaultTableModel(
                ControladorHotel.mapaReservasObject(),
                new String[]{
                    "Habitacion", "Fecha llegada", "Fecha salida", "Dias", "Total Moneda", "Editar"
                }));

        jScrollPane3.setViewportView(tabReservas);
        iniciarTablaCalendario(tabListaHabitaciones, tabCalendarioReservas, vistaSemanasSelected, fechaSelected.getDiaNumero(),
                fechaSelected.getMesNumero(), fechaSelected.getAnio(), listaHabitacionesTablaSelected,
                radBtnOrdenarHabTipo.isSelected());
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnTresSemanas;
    private javax.swing.JButton btnAgregarHabitaciones;
    private javax.swing.JButton btnAnadirEmpresa;
    private javax.swing.JButton btnAnterior;
    private javax.swing.JButton btnDosSemanas;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnHoy;
    private javax.swing.JButton btnProximo;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JButton btnUnMes;
    private javax.swing.JButton btnUnaSemana;
    private javax.swing.JComboBox cbxAgencia;
    private javax.swing.JComboBox cbxEmpresa;
    private javax.swing.JComboBox cbxFiltroAvance;
    private javax.swing.JComboBox cbxMesActual;
    private javax.swing.JComboBox cbxPersona;
    private javax.swing.JComboBox cbxReservasPreliminar;
    private javax.swing.JCheckBox chkAgencia;
    private javax.swing.JCheckBox chkEmpresa;
    private javax.swing.JCheckBox chkPersona;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JLabel labFechaPrimeraTabla;
    private javax.swing.JLabel labFechaUltimaTabla;
    private javax.swing.JProgressBar proBarAvanceDeMesTab;
    private javax.swing.JRadioButton radBtnOrdenarHabTipo;
    private javax.swing.JTable tabCalendarioReservas;
    private javax.swing.JTable tabListaHabitaciones;
    public static javax.swing.JTable tabReservas;
    private javax.swing.JTabbedPane tabsFacturacion;
    // End of variables declaration//GEN-END:variables
    private ControladorCalendario tablaCalendario;
    private static Object[][] listaHabitacionesTablaSelected;
    private static Fecha fechaSelected;
    private static int vistaSemanasSelected = 1;
    private static int mesActualFlag;
    private static int mesAnteriorFlag;
    private static String mesStringActual;
    private static String mesStringFinal;
    private int mesIntInicial;
    private anadirHabitacion anadir;
    private editarHabitacion editar;
    private anadirEmpresa anadirEmpresa;
    private anadirAgencia anadirAgencia;
    private anadirPersona anadirPersona;
}
